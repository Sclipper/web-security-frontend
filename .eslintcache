[{"/Users/sclipper/Projects/web-sec/web-security-frontend/src/index.js":"1","/Users/sclipper/Projects/web-sec/web-security-frontend/src/App.js":"2","/Users/sclipper/Projects/web-sec/web-security-frontend/src/Components/Register.js":"3","/Users/sclipper/Projects/web-sec/web-security-frontend/src/Components/Uppload.js":"4","/Users/sclipper/Projects/web-sec/web-security-frontend/src/Components/Home.js":"5","/Users/sclipper/Projects/web-sec/web-security-frontend/src/Components/Login.js":"6","/Users/sclipper/Projects/web-sec/web-security-frontend/src/api/index.js":"7","/Users/sclipper/Projects/web-sec/web-security-frontend/src/Components/Chat.js":"8","/Users/sclipper/Projects/web-sec/web-security-frontend/src/api/getPhoto.js":"9","/Users/sclipper/Projects/web-sec/web-security-frontend/src/api/upploadPhoto.js":"10","/Users/sclipper/Projects/web-sec/web-security-frontend/src/api/getMe.js":"11","/Users/sclipper/Projects/web-sec/web-security-frontend/src/api/authLogin.js":"12","/Users/sclipper/Projects/web-sec/web-security-frontend/src/api/authLogout.js":"13","/Users/sclipper/Projects/web-sec/web-security-frontend/src/api/authRegister.js":"14","/Users/sclipper/Projects/web-sec/web-security-frontend/src/api/callAPI.js":"15"},{"size":197,"mtime":1612861736170,"results":"16","hashOfConfig":"17"},{"size":3675,"mtime":1612861736165,"results":"18","hashOfConfig":"17"},{"size":2007,"mtime":1612864142162,"results":"19","hashOfConfig":"17"},{"size":2515,"mtime":1612864121952,"results":"20","hashOfConfig":"17"},{"size":1034,"mtime":1612861736166,"results":"21","hashOfConfig":"17"},{"size":1724,"mtime":1612864143143,"results":"22","hashOfConfig":"17"},{"size":309,"mtime":1612861736169,"results":"23","hashOfConfig":"17"},{"size":3607,"mtime":1612866748353,"results":"24","hashOfConfig":"17"},{"size":202,"mtime":1612861736169,"results":"25","hashOfConfig":"17"},{"size":535,"mtime":1612861736169,"results":"26","hashOfConfig":"17"},{"size":179,"mtime":1612864145315,"results":"27","hashOfConfig":"17"},{"size":388,"mtime":1612861736167,"results":"28","hashOfConfig":"17"},{"size":296,"mtime":1612861736167,"results":"29","hashOfConfig":"17"},{"size":398,"mtime":1612861736168,"results":"30","hashOfConfig":"17"},{"size":545,"mtime":1612866762309,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"rsb019",{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/sclipper/Projects/web-sec/web-security-frontend/src/index.js",[],["67","68"],"/Users/sclipper/Projects/web-sec/web-security-frontend/src/App.js",["69"],"import * as React from \"react\"\n\nimport { makeStyles } from \"@material-ui/core\"\nimport AppBar from \"@material-ui/core/AppBar\"\nimport Toolbar from \"@material-ui/core/Toolbar\"\nimport Typography from \"@material-ui/core/Typography\"\nimport Button from \"@material-ui/core/Button\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport MenuIcon from \"@material-ui/icons/Menu\"\n\nimport Register from \"./Components/Register\"\nimport Login from \"./Components/Login\"\nimport Home from \"./Components/Home\"\nimport Uppload from \"./Components/Uppload\"\n\nimport { getMe, authLogout } from \"./api\"\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\"\nimport Cookies from \"universal-cookie\"\n\nconst cookies = new Cookies()\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    color: \"white\",\n    textDecoration: \"none\",\n    \"&:hover\": {\n      cursor: \"pointer\",\n    },\n  },\n}))\n\nfunction App() {\n  const classes = useStyles()\n  const [user, setUser] = React.useState(null)\n\n  React.useEffect(() => {\n    if (!user) {\n      getMe().then((res) => {\n        setUser(res)\n      })\n    }\n  }, [setUser, user])\n\n  const handleLogout = () => {\n    authLogout().then(() => {\n      setUser(null)\n    })\n  }\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <header className=\"App-header\">\n          <AppBar position=\"static\">\n            <Toolbar>\n              <IconButton\n                edge=\"start\"\n                className={classes.menuButton}\n                color=\"inherit\"\n                aria-label=\"menu\"\n              >\n                <MenuIcon />\n              </IconButton>\n              <Typography variant=\"h6\" className={classes.title}>\n                <Link className={classes.title} to=\"/\">\n                  Home\n                </Link>\n              </Typography>\n              {!user ? (\n                <>\n                  <Button\n                    style={{ color: \"black\", marginRight: \"1rem\" }}\n                    variant=\"contained\"\n                    color=\"inherit\"\n                  >\n                    <Link to=\"/register\">Register</Link>\n                  </Button>\n                  <Button\n                    style={{ color: \"black\" }}\n                    variant=\"contained\"\n                    color=\"inherit\"\n                  >\n                    <Link to=\"/login\">Login</Link>\n                  </Button>\n                </>\n              ) : (\n                <>\n                  <Button\n                    style={{ color: \"black\", marginRight: \"1rem\" }}\n                    variant=\"contained\"\n                    color=\"inherit\"\n                  >\n                    <Link to=\"/uppload\">Uppload</Link>\n                  </Button>\n                  <Button\n                    style={{ color: \"black\" }}\n                    variant=\"contained\"\n                    color=\"inherit\"\n                    onClick={handleLogout}\n                  >\n                    Logout\n                  </Button>\n                </>\n              )}\n            </Toolbar>\n          </AppBar>\n        </header>\n        <body>\n          <Switch>\n            <Route path=\"/register\">\n              <Register />\n            </Route>\n            <Route path=\"/login\">\n              <Login user={user} setUser={setUser} />\n            </Route>\n            <Route path=\"/uppload\">\n              <Uppload />\n            </Route>\n            <Route path=\"/\">\n              <Home user={user} setUser={setUser} />\n            </Route>\n          </Switch>\n        </body>\n      </Router>\n    </div>\n  )\n}\n\nexport default App\n","/Users/sclipper/Projects/web-sec/web-security-frontend/src/Components/Register.js",["70"],"import * as React from \"react\"\nimport { Button, makeStyles, TextField } from \"@material-ui/core\"\nimport { useHistory } from \"react-router-dom\";\n\nimport { authRegister } from '../api'\n\nimport Cookies from 'universal-cookie';\n\nconst cookies = new Cookies()\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  form: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: \"50%\",\n    margin: \"0 auto\",\n  },\n  textField: {\n    margin: \"0.3rem\",\n  },\n}))\n\nconst Register = () => {\n  const classes = useStyles()\n  const [name, setName] = React.useState(\"\")\n  const [email, setEmail] = React.useState(\"\")\n  const [password, setPassword] = React.useState(\"\")\n  let history = useHistory();\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    authRegister({email, password, name}).then(res => {\n      history.push('/')\n    }).catch(err => {\n      alert('Failed for some reason!')\n    })\n   }\n\n  return (\n    <div>\n      <form type=\"submit\" onSubmit={handleSubmit} className={classes.form}>\n        <TextField\n          value={name}\n          className={classes.textField}\n          onChange={(e) => setName(e.target.value)}\n          id=\"outlined-basic\"\n          label=\"Name\"\n          variant=\"outlined\"\n        />\n        <TextField\n          value={email}\n          className={classes.textField}\n          onChange={(e) => setEmail(e.target.value)}\n          id=\"outlined-basic\"\n          label=\"Email\"\n          variant=\"outlined\"\n        />\n        <TextField\n          value={password}\n          className={classes.textField}\n          onChange={(e) => setPassword(e.target.value)}\n          id=\"outlined-basic\"\n          label=\"Password\"\n          variant=\"outlined\"\n          type='password'\n        />\n        <Button\n          type=\"submit\"\n          style={{\n            width: \"50%\",\n            alignSelf: \"center\",\n          }}\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          Register\n        </Button>\n      </form>\n    </div>\n  )\n}\n\nexport default Register\n","/Users/sclipper/Projects/web-sec/web-security-frontend/src/Components/Uppload.js",["71"],"import * as React from \"react\"\n\nimport {\n  Button,\n  Checkbox,\n  FormControlLabel,\n  makeStyles,\n  TextField,\n} from \"@material-ui/core\"\n\nimport { upploadPhoto } from \"../api\"\n// Import React FilePond\nimport { FilePond, registerPlugin } from \"react-filepond\"\n\n// Import FilePond styles\nimport \"filepond/dist/filepond.min.css\"\n\nconst useStyles = makeStyles(() => ({\n  form: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: \"50%\",\n    margin: \"0 auto\",\n  },\n  textField: {\n    margin: \"0.3rem\",\n  },\n}))\n\nconst Uppload = () => {\n  const classes = useStyles()\n  const [files, setFiles] = React.useState([])\n  const [title, setTitle] = React.useState(\"\")\n  const [description, setDescription] = React.useState(\"\")\n  const [isVisible, setIsVisible] = React.useState(true)\n\n  /**\n   title: string\n   description: string\n   visibility boolean\n   * \n   */\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    upploadPhoto({\n      photo: files[0],\n      title,\n      description,\n      visibility: isVisible,\n    }).then(() => {\n      setFiles([])\n      setTitle('')\n      setDescription('')\n    })\n  }\n  return (\n    <div>\n      <form type=\"submit\" onSubmit={handleSubmit} className={classes.form}>\n        <TextField\n          value={title}\n          className={classes.textField}\n          onChange={(e) => setTitle(e.target.value)}\n          id=\"outlined-basic\"\n          label=\"Title\"\n          variant=\"outlined\"\n        />\n        <TextField\n          value={description}\n          className={classes.textField}\n          onChange={(e) => setDescription(e.target.value)}\n          id=\"outlined-basic\"\n          label=\"Description\"\n          variant=\"outlined\"\n        />\n        <FilePond\n          files={files}\n          allowMultiple={false}\n          onupdatefiles={(fileItems) => {\n            setFiles(fileItems.map((fileItem) => fileItem.file))\n          }}\n        />\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={isVisible}\n              onChange={() => setIsVisible(!isVisible)}\n              name=\"checkedA\"\n            />\n          }\n          label=\"Visible for everyone\"\n        />\n        <Button\n          type=\"submit\"\n          style={{\n            color: \"black\",\n            width: \"50%\",\n            alignSelf: \"center\",\n            backgroundColor: \"orange\",\n          }}\n          variant=\"contained\"\n          color=\"inherit\"\n        >\n          Uppload\n        </Button>\n      </form>\n    </div>\n  )\n}\n\nexport default Uppload\n","/Users/sclipper/Projects/web-sec/web-security-frontend/src/Components/Home.js",["72","73"],"import * as React from \"react\"\n\nimport { makeStyles, Typography } from \"@material-ui/core\"\nimport { useHistory } from \"react-router-dom\"\nimport { getPhoto } from \"../api\"\nimport Chat from './Chat'\n\nconst useStyles = makeStyles(() => ({\n  container: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: 'center',\n    flexDirection: 'column'\n  },\n}))\n\nconst Home = ({ user, setUser }) => {\n  const classes = useStyles()\n  let history = useHistory()\n  const [image, setImage] = React.useState('')\n  const [isChat, setIsChat] = React.useState(false)\n\n  React.useEffect(() => {\n    if(!image){\n      getPhoto().then(res => {\n        setImage(res.data)\n      })\n    }\n  }, [image])\n\n  if (!user) {\n    history.push(\"/login\")\n  }\n  return (\n    <div className={classes.container}>\n      <Typography variant=\"h2\"> Welcome {user?.name} </Typography>\n      <Typography variant=\"h4\">Share your id with others: {user?._id} </Typography>\n      <div>\n      <Chat id={user?._id} />\n      </div>\n    </div>\n  )\n}\n\nexport default Home\n","/Users/sclipper/Projects/web-sec/web-security-frontend/src/Components/Login.js",[],"/Users/sclipper/Projects/web-sec/web-security-frontend/src/api/index.js",[],"/Users/sclipper/Projects/web-sec/web-security-frontend/src/Components/Chat.js",[],"/Users/sclipper/Projects/web-sec/web-security-frontend/src/api/getPhoto.js",[],"/Users/sclipper/Projects/web-sec/web-security-frontend/src/api/upploadPhoto.js",[],"/Users/sclipper/Projects/web-sec/web-security-frontend/src/api/getMe.js",[],"/Users/sclipper/Projects/web-sec/web-security-frontend/src/api/authLogin.js",[],"/Users/sclipper/Projects/web-sec/web-security-frontend/src/api/authLogout.js",[],"/Users/sclipper/Projects/web-sec/web-security-frontend/src/api/authRegister.js",[],"/Users/sclipper/Projects/web-sec/web-security-frontend/src/api/callAPI.js",[],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":20,"column":7,"nodeType":"80","messageId":"81","endLine":20,"endColumn":14},{"ruleId":"78","severity":1,"message":"79","line":9,"column":7,"nodeType":"80","messageId":"81","endLine":9,"endColumn":14},{"ruleId":"78","severity":1,"message":"82","line":13,"column":20,"nodeType":"80","messageId":"81","endLine":13,"endColumn":34},{"ruleId":"78","severity":1,"message":"83","line":21,"column":10,"nodeType":"80","messageId":"81","endLine":21,"endColumn":16},{"ruleId":"78","severity":1,"message":"84","line":21,"column":18,"nodeType":"80","messageId":"81","endLine":21,"endColumn":27},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"no-unused-vars","'cookies' is assigned a value but never used.","Identifier","unusedVar","'registerPlugin' is defined but never used.","'isChat' is assigned a value but never used.","'setIsChat' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]